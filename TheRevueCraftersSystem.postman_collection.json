{
	"info": {
		"_postman_id": "9fa1c815-ddc9-435b-8eec-cd1b59bbbac8",
		"name": "The \"Revue Crafters\" System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37482355"
	},
	"item": [
		{
			"name": "Login and Authentication",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"let json = pm.response.json();\r",
							"\r",
							"// Ensure response has required fields\r",
							"pm.test(\"Response contains email, password, accessToken\", () => {\r",
							"    pm.expect(json).to.have.property(\"email\");\r",
							"    pm.expect(json).to.have.property(\"password\");\r",
							"    pm.expect(json).to.have.property(\"accessToken\");\r",
							"});\r",
							"\r",
							"// Save token to collection variable\r",
							"pm.collectionVariables.set(\"token\", json.accessToken);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"test@mail.com\",\r\n  \"password\": \"123456\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/User/Authentication",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"User",
						"Authentication"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a New Revue",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let random = \"Revue\" + Math.floor(Math.random() * 1000);\r",
							"pm.collectionVariables.set(\"randomTitle\", random);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"let json = pm.response.json();\r",
							"\r",
							"// Message check\r",
							"pm.test(\"Message is 'Successfully created!'\", () => pm.expect(json.msg).to.eql(\"Successfully created!\"));\r",
							"\r",
							"// Title check\r",
							"pm.test(\"Title matches expected\", () => pm.expect(json.revue.title).to.eql(pm.collectionVariables.get(\"randomTitle\")));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"{{randomTitle}}\",\r\n  \"url\": \"\",\r\n  \"description\": \"This is a test revue created by Postman.\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Revue/Create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"Create"
					]
				}
			},
			"response": []
		},
		{
			"name": "List All Revues",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"let json = pm.response.json();\r",
							"\r",
							"// Ensure response is array with at least 1 item\r",
							"pm.test(\"Response is an array with at least one item\", () => {\r",
							"    pm.expect(json).to.be.an(\"array\").that.is.not.empty;\r",
							"});\r",
							"\r",
							"// Save last revue id\r",
							"let lastRevueId = json[json.length - 1].id;\r",
							"pm.collectionVariables.set(\"lastRevueId\", lastRevueId);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Revue/All",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"All"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit the Created Revue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"let json = pm.response.json();\r",
							"\r",
							"// Message check\r",
							"pm.test(\"Message is 'Edited successfully'\", () => pm.expect(json.msg).to.eql(\"Edited successfully\"));\r",
							"\r",
							"// Title check\r",
							"pm.test(\"Title matches new title\", () => pm.expect(json.revue.title).to.eql(\"Updated Test Revue\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Updated Test Revue\",\r\n  \"url\": \"\",\r\n  \"description\": \"Updated description\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/Revue/Edit?revueId={{lastRevueId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"Edit"
					],
					"query": [
						{
							"key": "revueId",
							"value": "{{lastRevueId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Edited Revue",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => pm.response.to.have.status(200));\r",
							"\r",
							"let json = pm.response.json();\r",
							"\r",
							"// Message check\r",
							"pm.test(\"The revue is deleted!\", () => pm.expect(json.msg).to.eql(\"The revue is deleted!\"));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL}}/api/Revue/Delete?revueId={{lastRevueId}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"Revue",
						"Delete"
					],
					"query": [
						{
							"key": "revueId",
							"value": "{{lastRevueId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJKd3RTZXJ2aWNlQWNjZXNzVG9rZW4iLCJqdGkiOiJmZWM3OWRhOC1hMmY0LTRmNTMtOGFjYy1iOWU0MmYyNGMwNjEiLCJpYXQiOiIwOC8xOC8yMDI1IDA2OjUwOjExIiwiVXNlcklkIjoiNDI3NzdlYTUtMDRhMi00M2I1LTEyOWQtMDhkZGRlMWQ4YTY0IiwiRW1haWwiOiJ0ZXN0QG1haWwuY29tIiwiVXNlck5hbWUiOiJ0ZXN0IiwiZXhwIjoxNzU1NTIxNDExLCJpc3MiOiJSZXZ1ZU1ha2VyX0FwcF9Tb2Z0VW5pIiwiYXVkIjoiUmV2dWVNYWtlcl9XZWJBUElfU29mdFVuaSJ9.ZP9HoI81LMeaipdzG0_BBZV01EXCgQ9o4y8NhDU8ELs",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL",
			"value": "https://d2925tksfvgq8c.cloudfront.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		},
		{
			"key": "randomTitle =",
			"value": "\"Revue338\"",
			"type": "string"
		},
		{
			"key": "lastRevueId =",
			"value": "69569980-3b5f-47dd-62f9-08ddde1ff7ac",
			"type": "string"
		},
		{
			"key": "randomTitle",
			"value": ""
		},
		{
			"key": "lastRevueId",
			"value": ""
		}
	]
}